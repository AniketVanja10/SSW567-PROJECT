import time
import unittest
import json
from unittest import mock
import pandas as pd
import MRTD

class PerformanceTest(unittest.TestCase):

    with open('records_decoded.json', 'r') as file_decoded:
        data_decoded = json.load(file_decoded)
        decoded_lines = data_decoded["records_decoded"]

    with open('records_encoded.json', 'r') as file_encoded:
        data_encoded = json.load(file_encoded)
        encoded_lines = data_encoded["records_encoded"]

    def measure_performance(self, function, lines, filename):
        array_performance = [["Number of lines", f"{function.__name__} without test"]]
        start = time.perf_counter()
        for i in range(1, 10001):
            if i == 100 or i % 1000 == 0:
                line = lines[i - 1]
                MRTD.scanMRZ = mock.Mock(return_value=line)
                function(line)
                end = time.perf_counter()
                array_performance.append([f"1~{i}", f"{end - start:0.8f}"])

        df_performance = pd.DataFrame(array_performance)
        df_performance.to_csv(filename, index=False, sep=',', header=False)

    def test_encode(self):
        self.measure_performance(self.encode_with_mock, self.decoded_lines, "encode.csv")

    def test_decode(self):
        self.measure_performance(self.decode_with_mock, self.encoded_lines, "decode.csv")

    def encode_with_mock(self, line):
        MRTD.encodeMRZ("P", line["line1"].get("issuing_country"), line["line1"].get("last_name"),
                       line["line1"].get("given_name"),
                       line["line2"].get("passport_number"), line["line2"].get("passport_number"),
                       line["line2"].get("birth_date"), line["line2"].get("sex"),
                       line["line2"].get("expiration_date"), line["line2"].get("personal_number"))

    def decode_with_mock(self, line):
        encode_line = line
        MRTD.scanMRZ = mock.Mock(return_value=encode_line)
        scan_res = MRTD.scanMRZ()
        MRTD.decodeMRZ(scan_res)

if __name__ == '__main__':
    unittest.main()
